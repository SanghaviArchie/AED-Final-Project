/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.AdminRole;

import javax.swing.JPanel;
import Business.Enterprises.Enterprise;
import Business.Enterprises.HospitalEnterprise;
import Business.Enterprises.LaboratoryEnterprise;
import Business.Enterprises.NGOEnterprise;
import Business.Enterprises.TranspotationEnterprise;
import  Business.Organisation.Organisation;
import Business.Organisation.Organisation.OrganisatioType;
import  Business.Organisation.OrganisationDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author DELL
 */
public class OrganizationPanel extends javax.swing.JPanel {
    private OrganisationDirectory organisationDirectory;
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    
    /**
     * Creates new form OrganisationPanel
     */
    public OrganizationPanel(JPanel userProcessContainer,OrganisationDirectory organisationDirectory, Enterprise enterprise) {
        this.userProcessContainer = userProcessContainer;
        this.organisationDirectory = organisationDirectory;
        this.enterprise = enterprise;

        autoPopulateTable();
        autoPopulateComboBox();
    }
    
    private void autoPopulateComboBox(){
//        System.out.println(enterprise.getEnterpriseType());
       
        cbOrganisationType.removeAllItems();
        if(enterprise.getEntType().equals(Enterprise.EntType.NGO)){
           
            for (NGOEnterprise.Type type : NGOEnterprise.Type.values()){
            if (!type.getType().equals(OrganisatioType.Admin.getType()))
                cbOrganisationType.addItem(type);
            }
        }else if(enterprise.getEntType().equals(Enterprise.EntType.Hospital)){
           
            for (HospitalEnterprise.Type type : HospitalEnterprise.Type.values()){
            if (!type.getType().equals(OrganisatioType.Admin.getType()))
                cbOrganisationType.addItem(type);
            }
        }else if(enterprise.getEntType().equals(Enterprise.EntType.Transportation)){
           
            for (TranspotationEnterprise.Type type : TranspotationEnterprise.Type.values()){
            if (!type.getType().equals(OrganisatioType.Admin.getType()))
                cbOrganisationType.addItem(type);
            }
        } else{
            for(LaboratoryEnterprise.Type type: LaboratoryEnterprise.Type.values()){
                cbOrganisationType.addItem(type);
            }
        }   
    }

    private void autoPopulateTable(){
        DefaultTableModel mdl = (DefaultTableModel) tblViewOrganisation.getModel();
        
        mdl.setRowCount(0);
        
        for (Organisation org : organisationDirectory.getOrgList()){
            Object[] row = new Object[2];
            row[0] = org.getOrgId();
            row[1] = org.getName();
            
            mdl.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbOrganisationType = new javax.swing.JComboBox();
        btnBack = new javax.swing.JButton();
        btnAddORganisation = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewOrganisation = new javax.swing.JTable();

        jLabel1.setText("Organisation Panel");

        jLabel2.setText("Select Type of Organisation :- ");

        cbOrganisationType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbOrganisationType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbOrganisationTypeActionPerformed(evt);
            }
        });

        btnBack.setText("<<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnAddORganisation.setText("Add");
        btnAddORganisation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddORganisationActionPerformed(evt);
            }
        });

        tblViewOrganisation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblViewOrganisation);
        if (tblViewOrganisation.getColumnModel().getColumnCount() > 0) {
            tblViewOrganisation.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(289, 289, 289)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jLabel2)
                        .addGap(28, 28, 28)
                        .addComponent(cbOrganisationType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(319, 319, 319)
                        .addComponent(btnAddORganisation))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(193, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbOrganisationType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddORganisation)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(292, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cbOrganisationTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbOrganisationTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbOrganisationTypeActionPerformed

    private void btnAddORganisationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddORganisationActionPerformed
        // TODO add your handling code here:
        if(enterprise.getEntType().equals(Enterprise.EntType.NGO)){
           
            NGOEnterprise.Type type = (NGOEnterprise.Type) cbOrganisationType.getSelectedItem();
            for(Organisation org: organisationDirectory.getOrgList()){
                if(org.getName().equals(type.getType())){
                    JOptionPane.showMessageDialog(null, "Organization Already created");
                    return;
                }
            }
            organisationDirectory.createNewNGOOrg(type);
            
        }else if(enterprise.getEntType().equals(Enterprise.EntType.Hospital)){
            
            HospitalEnterprise.Type type = (HospitalEnterprise.Type) cbOrganisationType.getSelectedItem();
            for(Organisation org: organisationDirectory.getOrgList()){
                if(org.getName().equals(type.getType())){
                    JOptionPane.showMessageDialog(null, "Organization Already created");
                    return;
                }
         }
            organisationDirectory.createNewHospitalOrg(type);   
            
        }else if(enterprise.getEntType().equals(Enterprise.EntType.Transportation)){
            
            TranspotationEnterprise.Type type = (TranspotationEnterprise.Type) cbOrganisationType.getSelectedItem();
            for(Organisation org: organisationDirectory.getOrgList()){
                if(org.getName().equals(type.getType())){
                    JOptionPane.showMessageDialog(null, "Organization Already created");
                    return;
                }
         }
            organisationDirectory.createNewTransportationOrg(type);   
            
        }
        
        else {
            LaboratoryEnterprise.Type type = (LaboratoryEnterprise.Type) cbOrganisationType.getSelectedItem();
            for(Organisation org: organisationDirectory.getOrgList()){
                if(org.getName().equals(type.getType())){
                    JOptionPane.showMessageDialog(null, "Organization Already created");
                    return;
                }
            }
            
            organisationDirectory.createNewLabOrg(type);
           
        }
        autoPopulateTable();
    }//GEN-LAST:event_btnAddORganisationActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddORganisation;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox cbOrganisationType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblViewOrganisation;
    // End of variables declaration//GEN-END:variables
}
